{"version":3,"sources":["Calculation/Calculation.js","App.js","reportWebVitals.js","index.js"],"names":["Calculation","useState","result","setResult","handleClick","e","concat","target","name","clearAll","clear","slice","length","calculate","eval","toString","err","className","type","value","onChange","readOnly","onClick","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o1BAGMA,YAAc,SAAdA,cACJ,cAA4BC,oDAAS,IAArC,qKAAOC,OAAP,cAAeC,UAAf,cACMC,YAAc,SAACC,GACnBF,UAAUD,OAAOI,OAAOD,EAAEE,OAAOC,QAG7BC,SAAW,WACfN,UAAU,KAGNO,MAAQ,WACZP,UAAUD,OAAOS,MAAM,EAAGT,OAAOU,OAAS,KAGtCC,UAAY,SAAZA,YACJ,IAEEV,UAAUW,KAAKZ,OAAOa,aACtB,MAAOC,KACPb,UAAU,WAId,OACE,mEAAKc,UAAU,iBAAf,UACE,kEAAKA,UAAU,YAAf,SACE,4EACE,oEAAOC,KAAK,OAAOC,MAAOjB,OAAQkB,SAAUX,SAAUY,UAAQ,QAIlE,mEAAKJ,UAAU,SAAf,UACE,qEAAQK,QAASb,SAAUc,GAAG,WAAWN,UAAU,YAAnD,gBAGA,qEAAQK,QAASZ,MAAOa,GAAG,YAAYN,UAAU,QAAjD,eAGA,qEAAQA,UAAU,SAASK,QAASlB,YAAaI,KAAK,IAAtD,eAGA,qEAAQS,UAAU,SAASK,QAASlB,YAAaI,KAAK,IAAtD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,SAASK,QAASlB,YAAaI,KAAK,IAAtD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,SAASK,QAASlB,YAAaI,KAAK,IAAtD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,SAASK,QAASlB,YAAaI,KAAK,IAAtD,eAGA,qEAAQS,UAAU,UAAUK,QAASlB,YAAaI,KAAK,IAAvD,eAGA,qEAAQS,UAAU,SAAlB,eAEA,qEAAQK,QAAST,UAAWI,UAAU,SAAST,KAAK,IAApD,sBAQOR,mC,wICnFAwB,MATf,WACE,OACE,sBAAKP,UAAU,SAAf,UACE,4CACA,cAACjB,EAAA,EAAD,QCISyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c155729.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Calculation.css\";\n\nconst Calculation = () => {\n  const [result, setResult] = useState(\"\");\n  const handleClick = (e) => {\n    setResult(result.concat(e.target.name));\n  };\n\n  const clearAll = () => {\n    setResult(\"\");\n  };\n\n  const clear = () => {\n    setResult(result.slice(0, result.length - 1));\n  };\n\n  const calculate = () => {\n    try {\n      // eslint-disable-next-line\n      setResult(eval(result.toString()));\n    } catch (err) {\n      setResult(\"Error\");\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"container\">\n        <form>\n          <input type=\"text\" value={result} onChange={clearAll} readOnly />\n        </form>\n      </div>\n\n      <div className=\"keypad\">\n        <button onClick={clearAll} id=\"clearAll\" className=\"clear-all\">\n          AC\n        </button>\n        <button onClick={clear} id=\"backspace\" className=\"clear\">\n          C\n        </button>\n        <button className=\"symbol\" onClick={handleClick} name=\"%\">\n          %\n        </button>\n        <button className=\"symbol\" onClick={handleClick} name=\"/\">\n          /\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"7\">\n          7\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"8\">\n          8\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"9\">\n          9\n        </button>\n        <button className=\"symbol\" onClick={handleClick} name=\"*\">\n          x\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"4\">\n          4\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"5\">\n          5\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"6\">\n          6\n        </button>\n        <button className=\"symbol\" onClick={handleClick} name=\"-\">\n          -\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"1\">\n          1\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"2\">\n          2\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"3\">\n          3\n        </button>\n        <button className=\"symbol\" onClick={handleClick} name=\"+\">\n          +\n        </button>\n        <button className=\"num-btn\" onClick={handleClick} name=\"0\">\n          0\n        </button>\n        <button className=\"symbol\">.</button>\n\n        <button onClick={calculate} className=\"result\" name=\"=\">\n          =\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculation;\n","import React from \"react\";\nimport \"./App.css\";\nimport Calculation from \"./Calculation/Calculation\";\n\nfunction App() {\n  return (\n    <div className=\"header\">\n      <h1>Calculator</h1>\n      <Calculation />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}